# From https://github.com/srid/srid/blob/master/.github/workflows/publish.yaml

name: "Publish to Pages"
on:
    push:
      branches:
        - main
    
    workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
          # Clone the Obsidian Vault HTML Graph Generator repo
      - name: Clone Obsidian Vault HTML Graph Generator
        run: |
          git clone https://github.com/Hellyom/Obsidian-Vault-HTML-Graph-Generator.git
          cd Obsidian-Vault-HTML-Graph-Generator
          mkdir -p ../graph
      # Run the script to generate the graph
      - name: Run the HTML Graph Generator
        run: |
          cd Obsidian-Vault-HTML-Graph-Generator
          python3 generate_html_graph.py ../.
      # Save the generated graph into the folder 'graph'
      - name: Save Graph to Project
        run: |
          mv ./Obsidian-Vault-HTML-Graph-Generator/output/* ../graph/
      # Commit the results
      - name: Commit the graph
        run: |
          cd ../current-project
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add graph/*
          git commit -m "Add generated HTML graph"
          git push origin main
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://cache.garnix.io?priority=41 https://cache.nixos.org/
      - name: Build the website (Nix) ðŸ”§
        run: |
          nix build -o ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - name: Generate graph
        run: nix graph --json > graph.json
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action